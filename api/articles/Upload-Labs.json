{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Upload-Labs","date":"2022-11-25T07:32:45.429Z","updated":"2022-11-25T07:35:57.533Z","comments":true,"path":"api/articles/Upload-Labs.json","keywords":null,"cover":[],"content":"<p>Upload-Labs</p>\n<h1 id=\"Pass-01\"><a href=\"#Pass-01\" class=\"headerlink\" title=\"Pass-01\"></a>Pass-01</h1><h2 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1\"></a>1</h2><p>使用一句话木马，直接进行上传，发现php后缀被限制，修改为jpg后缀重新上传，上传成功。</p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919202851813.png\" alt=\"image-20220919202851813\"></p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919203201183.png\" alt=\"image-20220919203201183\"></p>\n<p>使用Burpsuite抓包</p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919203351954.png\" alt=\"image-20220919203351954\"></p>\n<p>将jpg后缀修改为php，发包</p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919203501268.png\" alt=\"image-20220919203501268\"></p>\n<p>就可以将php为后缀的文件上传到网站，使用蚁剑，复制图片地址</p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919203610497.png\" alt=\"image-20220919203610497\"></p>\n<h2 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2\"></a>2</h2><p>直接查看源码，发现就是js有一个checkFile()，将浏览器关闭js</p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919203749483.png\" alt=\"image-20220919203749483\"></p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919203901311.png\" alt=\"image-20220919203901311\"></p>\n<p>修改后就可以直接上传php文件，重复上述步骤</p>\n<h2 id=\"源码\"><a href=\"#源码\" class=\"headerlink\" title=\"源码\"></a>源码</h2><p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919204131654.png\" alt=\"image-20220919204131654\"></p>\n<p>就是对文件后缀做限制</p>\n<h1 id=\"Pass-02\"><a href=\"#Pass-02\" class=\"headerlink\" title=\"Pass-02\"></a>Pass-02</h1><ol>\n<li>服务器MIME检测：即检测Content-Type的内容。</li>\n<li>绕过方法：修改类型为允许上传的类型即可。</li>\n</ol>\n<p>直接上传php文件，文件类型不正确，使用burpsuite抓包</p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919204235962.png\" alt=\"image-20220919204235962\"></p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919210843412.png\" alt=\"image-20220919210843412\"></p>\n<p>修改Content-Type为image/jpeg<code>、</code>image/png<code>、</code>image/gif</p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919210955432.png\" alt=\"image-20220919210955432\"></p>\n<p>上传成功</p>\n<h2 id=\"源码-1\"><a href=\"#源码-1\" class=\"headerlink\" title=\"源码\"></a>源码</h2><p>就是对文件类型进行判断</p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919211135366.png\" alt=\"image-20220919211135366\"></p>\n<h1 id=\"Pass-03\"><a href=\"#Pass-03\" class=\"headerlink\" title=\"Pass-03\"></a>Pass-03</h1><p>上传php文件</p>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919211233793.png\" alt=\"image-20220919211233793\"></p>\n<p>基于黑名单检测：黑名单的安全性比白名单的安全性低很多，攻击手法自然也比白名单多。一般由个专门blacklist，里面包含常见的危险脚本文件。</p>\n<p>绕过办法：</p>\n<ol>\n<li><p>文件大小写让绕过（Php ，PhP pHp，等）</p>\n</li>\n<li><p>黑白名单绕过（php，php2，php3，php5，phtml，asp，aspx，ascx，ashx，cer，asa，jsp，jspx）cdx，\\x00hh\\x46php</p>\n<ol>\n<li>基于白名单验证：只针对白名单中有的后缀名，文件才能上传成功。</li>\n<li>基于黑名单验证：只针对黑名单中没有的后缀名，文件才能上传成功。</li>\n<li>用黑名单不允许上传<code>.asp,.aspx,.php,.jsp</code>后缀的文件，但可以上传<code>.phtml、 .php3 .php5、php4、 .pht、php1、php2、phps</code>【这些后缀会被当成php文件解析】等等。</li>\n</ol>\n</li>\n<li><p>特殊文件名绕过</p>\n<ol>\n<li>修改数据包里的文件名为 test.php 或 test.asp_(下划线是空格)由于这种命名格式在   windows系统里是不允许的，所以在绕过上传之后windows系统会自动去掉.点和空格。Linux和Unix中没有这个特性。</li>\n<li>::$DATA(php在windows的时候如果文件名+”::DATA”会把::DATA之后的数据当作文件流处理，不会检测后缀名，且保持”::DATA”之前的文件名，其目的就是不检查后缀名)</li>\n</ol>\n</li>\n<li><p>. .htaccess文件攻击（结合黑名单攻击）</p>\n</li>\n<li><p>解析绕过</p>\n</li>\n</ol>\n<p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919234219822.png\" alt=\"image-20220919234219822\"></p>\n<p>使用双写绕过，因为会过滤::$DATA</p>\n<h2 id=\"源码-2\"><a href=\"#源码-2\" class=\"headerlink\" title=\"源码\"></a>源码</h2><p><img src=\"D:\\Documents\\Upload-Labs.assets\\image-20220919234453097.png\" alt=\"image-20220919234453097\"></p>\n<h1 id=\"Pass-04\"><a href=\"#Pass-04\" class=\"headerlink\" title=\"Pass-04\"></a>Pass-04</h1><pre><code>.htaccess是什么：\n全称是Hypertext Access(超文本入口) .htaccess文件也被成为分布式配置文件，提供了针对目录改变配置的方法，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。\n\n.htaccess功能：\n文件夹密码保护、用户自定义重定向、自定义404页面、扩展名伪静态化、禁止特定IP地址的用户、只允许特定IP地址的用户、禁止目录列表\n很可惜，这么一个强大的功能默认是不开启的 Apache （有伪静态的都可以试试）\n\n用法：\nAddType application/x-httpd-php .jpg 这个指令代表着.jpg文件会当做php来解析\nSetHandler application/x-httpd-php，意思是把所有文件都解析为php文件来执行。\n</code></pre>\n<h1 id=\"Pass-05\"><a href=\"#Pass-05\" class=\"headerlink\" title=\"Pass-05\"></a>Pass-05</h1><p>Pass-06</p>\n<p>Pass-07</p>\n<p>Pass-08</p>\n<p>Pass-09</p>\n<p>Pass-10</p>\n<p>Pass-11</p>\n<p>Pass-12</p>\n<p>Pass-13</p>\n<p>Pass-14</p>\n<p>Pass-15</p>\n<p>Pass-16</p>\n<p>Pass-17</p>\n<p>Pass-18</p>\n<p>Pass-20</p>\n<p>Pass-21</p>\n","text":"Upload-Labs Pass-011使用一句话木马，直接进行上传，发现php后缀被限制，修改为jpg后缀重新上传，上传成功。 使用Burpsuite抓包 将jpg后缀修改为php，发包 就可以将php为后缀的文件上传到网站，使用蚁剑，复制图片地址 2直接查看源码，发现就是js...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-01\"><span class=\"toc-text\">Pass-01</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1\"><span class=\"toc-text\">1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2\"><span class=\"toc-text\">2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BA%90%E7%A0%81\"><span class=\"toc-text\">源码</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-02\"><span class=\"toc-text\">Pass-02</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BA%90%E7%A0%81-1\"><span class=\"toc-text\">源码</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-03\"><span class=\"toc-text\">Pass-03</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BA%90%E7%A0%81-2\"><span class=\"toc-text\">源码</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-04\"><span class=\"toc-text\">Pass-04</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-05\"><span class=\"toc-text\">Pass-05</span></a></li></ol>","author":{"name":"Yum1","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Yum1Yum1/images/master/blogImg/IMG_5282(20220929-023350).JPG","link":"/","description":"开卷","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"SQLI-LABS","date":"2022-11-25T07:32:45.427Z","updated":"2022-11-25T07:35:57.532Z","comments":true,"path":"api/articles/SQLI-LABS.json","keywords":null,"cover":[],"text":"Less-1判断是否存在注入: ?id=1' and 1=1 --+ 判断字段数: ?id=1' order by 3--+ 判断显错位: ?id=-1' union select 1,2,3--+ 判断库名: ?id=-1' union select 1,database(),...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[],"author":{"name":"Yum1","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Yum1Yum1/images/master/blogImg/IMG_5282(20220929-023350).JPG","link":"/","description":"开卷","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}